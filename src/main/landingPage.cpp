#include <RTClib.h>

#include "eepromManager.h"
#include "utils.h"
#include "RTCController.h"
#include "relayController.h"

#include "pages.h"

String Pages::landingPage(){
  String routines = getRoutinesInEEPROM();
  int numberOfRoutines = getNumberOfRoutines(routines);
  std::array<int, 3> now = RTCController::getNow();
  String buf = ""; 
  buf += "<html lang='pt-BR'>";
  buf += "  <head>";
  buf += "      <meta charset='UTF-8'>";
  buf += "      <meta http-equiv='X-UA-Compatible' content='IE=edge'>";
  buf += "      <meta name='viewport' content='width=device-width, initial-scale=1.0'>";
  buf += "      <title>Dispositivo remoto</title>";
  buf += "  </head>";
  buf += "  <style>";
  buf += "      * {";
  buf += "          box-sizing: border-box;";
  buf += "          margin: 0;";
  buf += "          padding: 0;";
  buf += "          font-family: sans-serif;";
  buf += "          text-align: center;";
  buf += "          color: #403937;";
  buf += "      }";
  buf += "      :root {";
  buf += "          font-size: 62.5%;";
  buf += "      }";
  buf += "      body {";
  buf += "          width: 100vw;";
  buf += "          height: 100vh;";
  buf += "          background: linear-gradient(107.56deg, #5D5F28 0%, rgba(32, 90, 38, 0.557143) 32.29%, rgba(26, 87, 32, 0.264286) 53.65%, rgba(30, 30, 30, 0) 100%);";
  buf += "          background-color: #1E1E1E;";
  buf += "          font-size: 1.6rem;";
  buf += "          overflow-x: hidden;";
  buf += "      }";
  buf += "      .wrapper {";
  buf += "          display: flex;";
  buf += "          align-items: center;";
  buf += "          justify-content: center;";
  buf += "      }";
  buf += "      .app {";
  buf += "          width: 90vw;";
  buf += "          height: fit-content;";
  buf += "          padding: 4rem;";
  buf += "          background-color: #D9D9D9;";
  buf += "          border-radius: 10px;";
  buf += "          display: flex;";
  buf += "          align-items: center;";
  buf += "          flex-direction: column;";
  buf += "          gap: 4rem;";
  buf += "      }";
  buf += "      a:hover{";
  buf += "          transform: scale(1.05);";
  buf += "          opacity: 0.7;";
  buf += "      }";
  buf += "      .botao-excluir-horario:hover{";
  buf += "          transform: scale(1.05);";
  buf += "          opacity: 0.7;";
  buf += "      }";
  buf += "      a {";
  buf += "          margin-top: 1rem;";
  buf += "          border: none;";
  buf += "          cursor: pointer;";
  buf += "          transition: 200ms;";
  buf += "          font-size: 2.5rem;";
  buf += "          font-weight: 700;";
  buf += "          border-radius: 10px;";
  buf += "          padding: 1rem;";
  buf += "          text-decoration: none;";
  buf += "          background: #C4C4C4;";
  buf += "          box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);";
  buf += "          border-radius: 10px;";
  buf += "      }";
  buf += "      .botao-excluir-horario {";
  buf += "          margin-top: 1rem;";
  buf += "          border: none;";
  buf += "          cursor: pointer;";
  buf += "          transition: 200ms;";
  buf += "          font-size: 2.5rem;";
  buf += "          font-weight: 700;";
  buf += "          border-radius: 10px;";
  buf += "          padding: 1rem;";
  buf += "          text-decoration: none;";
  buf += "          background: #B55454;";
  buf += "          box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);";
  buf += "          border-radius: 10px;";
  buf += "          height: 5rem;";
  buf += "          width: 5rem;";
  buf += "      }";
  buf += "      .status {";
  buf += "          font-weight: 700;";
  buf += "          -webkit-text-stroke: 1px #403937;";
  buf += "      }";
  buf += "      .header {";
  buf += "          display: flex;";
  buf += "          flex-direction: column;";
  buf += "          justify-content: space-between;";
  buf += "          max-width: 97.4rem;";
  buf += "          width: 100%;";
  buf += "      }";
  buf += "      #desligado {";
  buf += "          color: #D45C5C;";
  buf += "      }";
  buf += "      #botaodesligado {";
  buf += "          background-color: #8AC880;";
  buf += "          color: #ffffff;";
  buf += "      }";
  buf += "      #ligado {";
  buf += "          color: #8AC880;";
  buf += "      }";
  buf += "      #botaoligado {";
  buf += "          color: #ffffff;";
  buf += "          background-color: #D45C5C;";
  buf += "      }";
  buf += "      .horario-relogio {";
  buf += "          display: flex;";
  buf += "          justify-content: center;";
  buf += "          gap: 0.5rem;";
  buf += "          flex-direction: row;";
  buf += "          margin-top: 1rem;";
  buf += "      }";
  buf += "      .horario-relogio div {";
  buf += "          display: flex;";
  buf += "          justify-content: center;";
  buf += "          align-items: center;";
  buf += "          background-color: #CDCDCD;";
  buf += "          height: 5rem;";
  buf += "          width: 5rem;";
  buf += "          border-radius: 10px;";
  buf += "          font-size: 2rem;";
  buf += "          font-weight: 500;";
  buf += "          margin-bottom: 2rem;";
  buf += "      }";
  buf += "      .separador-de-hora {";
  buf += "          font-size: 2rem;";
  buf += "          align-self: center;";
  buf += "      }";
  buf += "        .footer-horarios {";
  buf += "            display: flex;";
  buf += "            flex-direction: column;";
  buf += "            align-items: center;";
  buf += "            gap: 1rem;";
  buf += "        }";
  buf += "        .footer-horarios a {";
  buf += "            width: 28rem;";
  buf += "        }";
  buf += "      @media (min-width: 952px) {";
  buf += "          .header {";
  buf += "              flex-direction: row;";
  buf += "          }";
  buf += "      }";
  buf += "      .horario {";
  buf += "        display: flex;";
  buf += "        gap: 0.5rem;";
  buf += "      }";
  buf += "      .horario h1 {";
  buf += "        font-size: 2rem;";
  buf += "        align-self: center;";
  buf += "      }";
  buf += "       .container-de-horarios {";
  buf += "          display: flex;";
  buf += "          flex-direction: column;";
  buf += "          align-items: center;";
  buf += "          width: 100%;";
  buf += "          margin-top: 2rem;";
  buf += "      }";
  buf += "      @media (max-width: 952px) {";
  buf += "          .app {";
  buf += "              width: 100vw;";
  buf += "          }";
  buf += "      }";
  buf += "  </style>";
  buf += "  <body>";
  buf += "      <div class='wrapper'>";
  buf += "          <div class='app'>";
  buf += "              <header class='header'>";
  buf += "                  <div>";

  if(relay.isOn){
    buf += "                      <h1>O dispositivo est√° <strong class='status' id='ligado'>ligado</strong> </h1>";
    buf += "                      <p id='headerp'>E permanecera assim at√© o horario configurado para desligar ou o usuario desligar manualmente.</p>";
    buf += "                  </div>";
    buf += "                  <a href='/desligar-manualmente' id='botaoligado'>";
    buf += "                      desligar manualmente";
    buf += "                  </a>";
  } else {
    buf += "                      <h1>O dispositivo est√° <strong class='status' id='desligado'>desligado</strong> </h1>";
    buf += "                      <p id='headerp'>E permanecera assim at√© o horario configurado para ligar ou o usuario ligar manualmente.</p>";
    buf += "                  </div>";
    buf += "                  <a href='/ligar-manualmente' id='botaodesligado'>";
    buf += "                      ligar manualmente";
    buf += "                  </a>";
  }
  buf += "              </header>";
  buf += "                <div>";
  if(numberOfRoutines >= 1){
    buf += "                <div>";
    buf += "                    <h1>O sistema esta configurado para ficar ligado nos seguintes horarios:</h1>";
    buf += "                    <div class='container-de-horarios'>";
    for(int i = 0; i < numberOfRoutines; i = i + 1){

      int horaLiga = atoi(routines.substring(i*8, i*8+2).c_str());
      int minutoLiga = atoi(routines.substring(i*8+2, i*8+4).c_str());
      int horaDesliga = atoi(routines.substring(i*8+4, i*8+6).c_str());
      int minutoDesliga = atoi(routines.substring(i*8+6, i*8+8).c_str());
      buf += "                        <div class='horario'>";
      buf += "                            <div class='horario-relogio'>";
      buf += "                              <div>";
      buf += numberToTwoChars(horaLiga);
      buf += "                              </div><label class='separador-de-hora'>:</label>";
      buf += "                                <div>";
      buf += numberToTwoChars(minutoLiga);
      buf += "                                </div>";
      buf += "                            </div>";
      buf += "                            <h1> at√© </h1>";
      buf += "                            <div class='horario-relogio'>";
      buf += "                                <div>";
      buf += numberToTwoChars(horaDesliga);
      buf += "                                </div><label class='separador-de-hora'>:</label>";
      buf += "                                <div>";
      buf += numberToTwoChars(minutoDesliga);
      buf += "                                </div>";
      buf += "                            </div>";
      buf += "                          <button onclick='excluirHorario(\"";
      buf += numberToTwoChars(horaLiga) + numberToTwoChars(minutoLiga);
      buf += "-";
      buf += numberToTwoChars(horaDesliga) + numberToTwoChars(minutoDesliga);
      buf += "\")' class='botao-excluir-horario'>";
      buf += "                              üóë";
      buf += "                          </button>";
      buf += "                        </div>";
    }
    buf += "                    </div>";
    buf += "                </div>";
  } else {
    buf += "<h1>Voc√™ n√£o configurou um horario para <span id='ligar'>ligar</span> ou <span id='desligar'>desligar</span></h1>";
  }
  buf += "                    <div class='footer-horarios'>";
  buf += "                        <a href='/configurar-horario'>adicionar horario</a>";
  if(numberOfRoutines >= 1){
    buf += "                        <a href='/limpar-horarios'>apagar horarios</a>";
  }
  buf += "                    </div>";
  buf += "                </div>";
  buf += "                <div>";
  buf += "                    <h1>horario atual:</h1>";
  buf += "                    <div class='horario-relogio'>";
  buf += "                        <div id='hora-atual'>";
  buf += numberToTwoChars(now[0]);
  buf += "                        </div> <label class='separador-de-hora'>:</label>";
  buf += "                        <div id='minuto-atual'>";
  buf += numberToTwoChars(now[1]);
  buf += "                        </div>";
  buf += "                    </div>";
  buf += "                  <a href='/configurar-relogio'>configurar relogio</a>";
  buf += "                </div>";
  buf += "          </div>";
  buf += "      </div>";
  buf += "  </body>";
  buf += "  <script>";

  // if(error){
  //   error = false;
  //   buf += "alert('";
  //   buf += mensagemdeErro;
  //   buf += "')\n";
  // }
  
  buf += "    setInterval(async() => {\n";
  buf += "      const respostaHoraAtual = await fetch('/relogio')\n";
  buf += "      const respostaStatus = await fetch('/status')\n";
  buf += "      const datahoraAtual = await respostaHoraAtual.json()\n";
  buf += "      const dataStatus = await respostaStatus.json()\n";
  buf += "      const visorHora = window.document.getElementById('hora-atual')\n";
  buf += "      const visorMinuto = window.document.getElementById('minuto-atual')\n";
  buf += "      if(dataStatus.status == 0){\n";
  buf += "        const visorStatus = window.document.getElementById('ligado') || window.document.getElementById('desligado')\n";
  buf += "        const botaoLigado = window.document.getElementById('botaoligado') || window.document.getElementById('botaodesligado')\n";
  buf += "        visorStatus.innerHTML = 'desligado'\n";
  buf += "        visorStatus.id = 'desligado'\n";
  buf += "        botaoLigado.innerHTML = 'ligar manualmente'\n";
  buf += "        botaoLigado.id = 'botaodesligado'\n";
  buf += "        botaoLigado.href = '/ligar-manualmente'\n";
  buf += "      } else {\n";
  buf += "        const visorStatus =    window.document.getElementById('ligado') || window.document.getElementById('desligado')\n";
  buf += "        const botaoDesligado = window.document.getElementById('botaoligado') || window.document.getElementById('botaodesligado')\n";
  buf += "        visorStatus.innerHTML = 'ligado'\n";
  buf += "        visorStatus.id = 'ligado'\n";
  buf += "        botaoDesligado.innerHTML = 'desligar manualmente'\n";
  buf += "        botaoDesligado.id = 'botaoligado'\n";
  buf += "        botaoDesligado.href = '/desligar-manualmente'\n";
  buf += "      }\n";
  buf += "      visorHora.innerHTML = datahoraAtual.hora\n";
  buf += "      visorMinuto.innerHTML = datahoraAtual.minuto\n";
  buf += "    }, 5000)\n";
  buf += "      function excluirHorario(horario){\n";
  buf += "          const [horarioLiga, horarioDesliga] = horario.split('-')\n";
  buf += "          const horarioLigaSplitado = horarioLiga.split('')\n";
  buf += "          const horarioDesligaSplitado = horarioDesliga.split('')\n";
  buf += "          const usuarioConfirmouAExclusao = confirm(`deseja mesmo excluir o horario de ${horarioLigaSplitado[0]}${horarioLigaSplitado[1]}:${horarioLigaSplitado[2]}${horarioLigaSplitado[3]} ate ${horarioDesligaSplitado[0]}${horarioDesligaSplitado[1]}:${horarioDesligaSplitado[2]}${horarioDesligaSplitado[3]}?`)\n";
  buf += "          if(usuarioConfirmouAExclusao){\n";
  buf += "              const horarioFormatadoParaEnvio = `${horarioLigaSplitado[0]}${horarioLigaSplitado[1]}${horarioLigaSplitado[2]}${horarioLigaSplitado[3]}${horarioDesligaSplitado[0]}${horarioDesligaSplitado[1]}${horarioDesligaSplitado[2]}${horarioDesligaSplitado[3]}`\n";
  buf += "              window.location.replace(`/excluir-horario?horario=${horarioFormatadoParaEnvio}`)\n";
  buf += "          }\n";
  buf += "      }\n";
  buf += "  </script>";
  buf += "</html>";

  return buf;
}